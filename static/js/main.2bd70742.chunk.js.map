{"version":3,"sources":["updateAction.js","pages/FN011.jsx","pages/Gear.jsx","pages/FN022.jsx","pages/FN026.jsx","pages/FN028.jsx","pages/Result.jsx","index.jsx"],"names":["updateAction","state","payload","console","log","withRouter","props","useForm","register","handleSubmit","useStateMachine","actions","className","onSubmit","data","history","push","htmlFor","type","id","defaultValue","prj_cd","required","prj_nm","aria-label","prj_ldr","selected","value","prj_date0","prj_date1","lake","protocol","style","height","comment0","gear","name","to","ssn","ssn_des","role","space","space_des","dd_lat","dd_lon","mode","mode_des","Result","class","JSON","stringify","App","basename","process","exact","path","component","FN011","FN022","FN026","FN028","Gear","createStore","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2bd70742.chunk.js","sourcesContent":["export default function updateAction(state, payload) {\n  console.log(\"state:\", state);\n  console.log(\"payload:\", payload);\n  return {\n    ...state,\n    ...payload,\n  };\n}\n","import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport { FaArrowRight } from \"react-icons/fa\";\n\nimport updateAction from \"../updateAction\";\n\nconst FN011 = (props) => {\n  const { register, handleSubmit } = useForm();\n  const { actions, state } = useStateMachine({ updateAction });\n  const onSubmit = (data) => {\n    actions.updateAction(data);\n    props.history.push(\"./fn022\");\n  };\n\n  return (\n    <>\n      <p>\n        This Fishnet Project Setup Wizard will step through a number of forms to\n        collect basic information about your project. Once the forms are\n        complete, a project entry will be created in FN_Portal and a link to a\n        pre-configured data entry template database will be provided for you to\n        download and populate.\n      </p>\n      <p>Let's get started with some basic information about the project.</p>\n      <div className=\"card\">\n        <div className=\"card-header\">Basic Project Setup - FN011</div>\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-4 mb-3\">\n                <label htmlFor=\"prj_cd\" className=\"form-label\">\n                  Project Code\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"prj_cd\"\n                  {...register(\"prj_cd\")}\n                  defaultValue={state.prj_cd}\n                  required\n                />\n              </div>\n\n              <div className=\"col-4 mb-3\">\n                <label htmlFor=\"prj_nm\" className=\"form-label\">\n                  Project Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"prj_nm\"\n                  {...register(\"prj_nm\")}\n                  defaultValue={state.prj_nm}\n                  required\n                />\n              </div>\n\n              <div className=\"col-4 mb-3\">\n                <label htmlFor=\"select-prj-ldr\" className=\"form-label\">\n                  Project Lead\n                </label>\n                <select\n                  {...register(\"prj_ldr\")}\n                  className=\"form-select\"\n                  required\n                  aria-label=\"Select Project Lead\"\n                  defaultValue={state.prj_ldr}\n                >\n                  <option selected>Select project lead...</option>\n                  <option value=\"hs\">Homer Simpson</option>\n                  <option value=\"mb\">Monty Burns</option>\n                  <option value=\"bg\">Barny Gumble</option>\n                  <option value=\"fn\">Ned Flanders</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-3 mb-3\">\n                <label htmlFor=\"prj_date0\" className=\"form-label\">\n                  Start Date\n                </label>\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  id=\"prj_date0\"\n                  {...register(\"prj_date0\")}\n                  defaultValue={state.prj_date0}\n                  required\n                />\n              </div>\n\n              <div className=\"col-3 mb-3\">\n                <label htmlFor=\"prj_date1\" className=\"form-label\">\n                  End Date\n                </label>\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  id=\"prj_date1\"\n                  {...register(\"prj_date1\")}\n                  defaultValue={state.prj_date1}\n                  required\n                />\n              </div>\n\n              <div className=\"col-3 mb-3\">\n                <label htmlFor=\"select-lake\" className=\"form-label\">\n                  Lake\n                </label>\n\n                <select\n                  id=\"select-lake\"\n                  {...register(\"lake\")}\n                  className=\"form-select\"\n                  aria-label=\"Select Lake\"\n                  defaultValue={state.lake}\n                  required\n                >\n                  <option selected>Select lake...</option>\n                  <option value=\"HU\">Huron</option>\n                  <option value=\"ER\">Erie</option>\n                  <option value=\"ON\">Ontario</option>\n                  <option value=\"SC\">St. Clare</option>\n                  <option value=\"SU\">Superior</option>\n                </select>\n              </div>\n\n              <div className=\"col-3 mb-3\">\n                <label htmlFor=\"select-protocol\" className=\"form-label\">\n                  Protocol\n                </label>\n\n                <select\n                  id=\"select-protocol\"\n                  {...register(\"protocol\")}\n                  className=\"form-select\"\n                  aria-label=\"Select Protocol\"\n                  required\n                  defaultValue={state.protocol}\n                >\n                  <option selected>Select protocol...</option>\n                  <option value=\"bsm\">Broad Scale Monitoring (BSM)</option>\n                  <option value=\"fwin\">\n                    Fall Walleye Index Netting (FWIN)\n                  </option>\n                  <option value=\"osia\">Offshore Index (OSIA)</option>\n                  <option value=\"estn\">Early Spring Trap Netting (ESTN)</option>\n                  <option value=\"nscin\">\n                    Near Shore Community Index Netting (NSCIN)\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"comment0\" className=\"form-label\">\n                Project Description\n              </label>\n              <textarea\n                style={{ height: \"200px\" }}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"comment0\"\n                {...register(\"comment0\")}\n                defaultValue={state.comment0}\n                required\n              />\n            </div>\n\n            <hr />\n\n            <div className=\"row justify-content-end\">\n              <div className=\"col-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Next\n                  <span className=\"px-1\">\n                    <FaArrowRight />\n                  </span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(FN011);\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport { FaPlus, FaArrowRight, FaArrowLeft } from \"react-icons/fa\";\nimport updateAction from \"../updateAction\";\n\nconst Gear = (props) => {\n  const { register, handleSubmit } = useForm();\n  const { state, actions } = useStateMachine({ updateAction });\n  const onSubmit = (data) => {\n    actions.updateAction(data);\n    props.history.push(\"./fn028\");\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Gear and Process Types</div>\n      <div className=\"card-body\">\n        <p>\n          This form will capture which gears are going to be used in this\n          project and how the catch in those gears will be processed. Available\n          gear choices will be dependent on the selected protocol, and available\n          process types will be limited to those that are known for the selected\n          gears - e.g. - Trap nets have a single process type, FWIN nets can be\n          by net or by panel.\n        </p>\n\n        <hr />\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-3 mb-3\">\n                  <label htmlFor=\"select-protocol\" className=\"form-label\">\n                    Gear\n                  </label>\n\n                  <select\n                    id=\"select-gear\"\n                    {...register(\"gear\")}\n                    className=\"form-select\"\n                    aria-label=\"Select Gear\"\n                    required\n                    defaultValue={state.gear}\n                  >\n                    <option selected>Select gear...</option>\n                    <option value=\"gl21\">\n                      GL21 - Huron Offshore Index Gillnet\n                    </option>\n                    <option value=\"gl50\">GL50 - FWIN Gillnet</option>\n                    <option value=\"na1\">NA1 - BSM Large Mesh Gillnet</option>\n                    <option value=\"on2\">ON2 - BSM Small Mesh Gillnet</option>\n                    <option value=\"tp08\">TP08 - 8' NCSIN Trapnet </option>\n                    <option value=\"gl38\">GL38 - 38 mm SLIN/FLIN Gillnet</option>\n                    <option value=\"gl51\">GL51 - 51 mm SLIN/FLIN Gillnet</option>\n                    <option value=\"gl64\">GL64 - 64 mm SLIN/FLIN Gillnet</option>\n                  </select>\n                </div>\n\n                <div className=\"col-9 mb-3\">\n                  <div className=\"row\">\n                    <p>Process Type:</p>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"process-type\"\n                          id=\"process-type-1\"\n                          value=\"1\"\n                          {...register(\"process_type\")}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"process-type-1\"\n                        >\n                          By Net\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"process-type\"\n                          id=\"process-type-2\"\n                          value=\"2\"\n                          {...register(\"process_type\")}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"process-type-2\"\n                        >\n                          By Mesh\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"process-type\"\n                          id=\"process-type-3\"\n                          value=\"3\"\n                          {...register(\"process_type\")}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"process-type-3\"\n                        >\n                          By Panel\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"process-type\"\n                          id=\"process-type-4\"\n                          value=\"4\"\n                          {...register(\"process_type\")}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"process-type-4\"\n                        >\n                          Panel Group\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"row justify-content-between\">\n            <div className=\"col-2\">\n              <Link to=\"/fn026\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  <span className=\"px-1\">\n                    <FaArrowLeft />\n                  </span>\n                  Back\n                </button>\n              </Link>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"button\" className=\"btn btn-secondary\">\n                <span className=\"px-1\">\n                  <FaPlus />\n                </span>\n                Add Another Gear\n              </button>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Next\n                <span className=\"px-1\">\n                  <FaArrowRight />\n                </span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Gear);\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport { FaPlus, FaArrowRight, FaArrowLeft } from \"react-icons/fa\";\nimport updateAction from \"../updateAction\";\n\nconst FN022 = (props) => {\n  const { register, handleSubmit } = useForm();\n  const { state, actions } = useStateMachine({ updateAction });\n  const onSubmit = (data) => {\n    actions.updateAction(data);\n    props.history.push(\"./fn026\");\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Seasons - FN022</div>\n      <div className=\"card-body\">\n        <p>\n          This form will be used to capture informatin about the seasons\n          (temporal strata) assocaited with this project. Not all projects have\n          seasonal components, if none are specified, a default value will be\n          created using the project start and end dates.\n        </p>\n\n        <p>\n          There is no limit on the number of seasons that can be specified,\n          however they must be consistent with these constraints:\n        </p>\n        <ul>\n          <li>season code must be unique within a project</li>\n          <li>season dates cannot overlap</li>\n          <li>\n            season dates must be contained within the projet start and end dates\n          </li>\n          <li>every sample must belong to one, and only one season</li>\n        </ul>\n\n        <hr />\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"row\">\n            <div className=\"col-2 mb-3\">\n              <label htmlFor=\"ssn\" className=\"form-label\">\n                Season\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"ssn\"\n                {...register(\"ssn\")}\n                defaultValue={state.ssn || \"00\"}\n                required\n              />\n            </div>\n\n            <div className=\"col-4 mb-3\">\n              <label htmlFor=\"ssn-des\" className=\"form-label\">\n                Season Description\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"ssn-des\"\n                {...register(\"ssn_des\")}\n                defaultValue={state.ssn_des || \"Default Season\"}\n                required\n              />\n            </div>\n\n            <div className=\"col-3 mb-3\">\n              <label htmlFor=\"ssn_date0\" className=\"form-label\">\n                Start Date\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"ssn_date0\"\n                {...register(\"ssn_date0\")}\n                defaultValue={state.prj_date0}\n                required\n              />\n            </div>\n\n            <div className=\"col-3 mb-3\">\n              <label htmlFor=\"ssn_date1\" className=\"form-label\">\n                End Date\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"ssn_date1\"\n                {...register(\"ssn_date1\")}\n                defaultValue={state.prj_date1}\n                required\n              />\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"row justify-content-between\">\n            <div className=\"col-2\">\n              <Link to=\"/\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  <span className=\"px-1\">\n                    <FaArrowLeft />\n                  </span>\n                  Back\n                </button>\n              </Link>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"button\" className=\"btn btn-secondary\">\n                <span className=\"mx-1\">\n                  <FaPlus />\n                </span>\n                Add a Season\n              </button>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Next\n                <span className=\"ps-2\">\n                  <FaArrowRight />\n                </span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FN022);\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport { FaPlus, FaArrowRight, FaArrowLeft } from \"react-icons/fa\";\nimport updateAction from \"../updateAction\";\n\nconst FN026 = (props) => {\n  const { register, handleSubmit } = useForm();\n  const { state, actions } = useStateMachine({ updateAction });\n  const onSubmit = (data) => {\n    actions.updateAction(data);\n    props.history.push(\"./gear\");\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Spatial Strata - FN026</div>\n      <div className=\"card-body\">\n        <div className=\"alert alert-warning\" role=\"alert\">\n          This form is likely to change as the modernization process progresses\n          and we collectively decide on how we want to capture spatial\n          information associated with our projects. For now, the minimal\n          requirement is a space name, description, and coordinate to plot a\n          point on a map for each spatial strata.\n        </div>\n\n        <p>\n          This form will be used to identify spatial strata used in the design\n          of the project. If no spatial strata are defined, a single default\n          strata will be created using the spatial extent of the sampling\n          points. Multiple spatial strata can be defined. For now, they will be\n          simple records, but in future could include interactive map to select\n          points, or dynamic select widget that can be populated from\n          known/existing spatial strata that have been used in previous\n          projects.\n        </p>\n        <p>\n          Like seasons, there is no limit on the number of spatial strata that\n          can be specified, however they must be consistent with these\n          constraints:\n        </p>\n        <ul>\n          <li>Space code must be unique within a project</li>\n          <li>Every sample must belong to one, and only one spatial strata</li>\n          <li>Spatial strata cannot overlap.</li>\n          <li>Spatial strata can be either points or polygons (some day)</li>\n        </ul>\n\n        <hr />\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"row\">\n            <div className=\"col-2 mb-3\">\n              <label htmlFor=\"space\" className=\"form-label\">\n                Space\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"space\"\n                {...register(\"space\")}\n                defaultValue={state.space || \"00\"}\n                required\n              />\n            </div>\n\n            <div className=\"col-4 mb-3\">\n              <label htmlFor=\"space-des\" className=\"form-label\">\n                Space Description\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"space-des\"\n                {...register(\"space_des\")}\n                defaultValue={state.space_des || \"Default Space\"}\n                required\n              />\n            </div>\n\n            <div className=\"col-3 mb-3\">\n              <label htmlFor=\"dd-lat\" className=\"form-label\">\n                Latitude\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"dd-lat\"\n                {...register(\"dd_lat\")}\n                defaultValue={state.dd_lat}\n                required\n              />\n            </div>\n\n            <div className=\"col-3 mb-3\">\n              <label htmlFor=\"dd-lon\" className=\"form-label\">\n                Longitude\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"dd-lon\"\n                {...register(\"dd_lon\")}\n                defaultValue={state.dd_lon}\n                required\n              />\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"row justify-content-between\">\n            <div className=\"col-2\">\n              <Link to=\"/fn022\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  <span className=\"px-1\">\n                    <FaArrowLeft />\n                  </span>\n                  Back\n                </button>\n              </Link>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"button\" className=\"btn btn-secondary\">\n                <span className=\"px-1\">\n                  <FaPlus />\n                </span>\n                Add Another Space\n              </button>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Next\n                <span className=\"px-1\">\n                  <FaArrowRight />\n                </span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FN026);\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"../updateAction\";\n\nimport { FaPlus, FaArrowRight, FaArrowLeft } from \"react-icons/fa\";\n\nconst FN028 = (props) => {\n  const { register, handleSubmit } = useForm();\n  const { state, actions } = useStateMachine({ updateAction });\n  const onSubmit = (data) => {\n    actions.updateAction(data);\n    props.history.push(\"./result\");\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Fishing Mode - FN028</div>\n      <div className=\"card-body\">\n        <p>\n          This form will be used to capture information on the fishing modes\n          used in this project. Fishing modes define how the gear will be\n          deployed. Particularly with respect to water depth and depth contours.\n        </p>\n\n        <p>\n          It may be helpful to think of modes as quick descriptions of how your\n          gear will be deployed (and reported on at the end of the project) for\n          example:\n        </p>\n\n        <ul>\n          <li>GL50 set on bottom across depth contours</li>\n          <li>GL89 canned in the thermocline along depth contours</li>\n          <li>TP08 set on bottom perpendicular to shore</li>\n        </ul>\n\n        <p>\n          The number of modes is limited to the combination of gears, orients,\n          and set types used in your project. Generally fewer modes are better\n          than more, and at least one mode is required for each gear.\n          Additionally, modes must be consistent with these constraints:\n        </p>\n        <ul>\n          <li>each mode code must be unique within a project</li>\n          <li>gear, orient, and set-type must be unique</li>\n          <li>every sample must belong to one, and only one mode</li>\n        </ul>\n\n        <hr />\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"row\">\n            <div className=\"col-2 mb-3\">\n              <label htmlFor=\"mode\" className=\"form-label\">\n                Mode\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"mode\"\n                {...register(\"mode\")}\n                defaultValue={state.mode || \"00\"}\n                required\n              />\n            </div>\n\n            <div className=\"col-3 mb-3\">\n              <label htmlFor=\"mode-des\" className=\"form-label\">\n                Mode Description\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"mode-des\"\n                {...register(\"mode_des\")}\n                defaultValue={state.mode_des || \"Default Mode\"}\n                required\n              />\n            </div>\n\n            <div className=\"col-3 mb-3\">\n              <label htmlFor=\"select-protocol\" className=\"form-label\">\n                Gear\n              </label>\n\n              <select\n                id=\"select-protocol\"\n                {...register(\"gear\")}\n                className=\"form-select\"\n                aria-label=\"Select Gear\"\n                required\n              >\n                <option selected>Select gear...</option>\n                <option value=\"gl21\">\n                  GL21 - Huron Offshore Index Gillnet\n                </option>\n                <option value=\"gl50\">GL50 - FWIN Gillnet</option>\n                <option value=\"na1\">NA1 - BSM Large Mesh Gillnet</option>\n                <option value=\"on2\">ON2 - BSM Small Mesh Gillnet</option>\n                <option value=\"tp08\">TP08 - 8' NCSIN Trapnet </option>\n                <option value=\"gl38\">GL38 - 38 mm SLIN/FLIN Gillnet</option>\n                <option value=\"gl51\">GL51 - 51 mm SLIN/FLIN Gillnet</option>\n                <option value=\"gl64\">GL64 - 64 mm SLIN/FLIN Gillnet</option>\n              </select>\n            </div>\n\n            <div className=\"col-2 mb-3\">\n              <label htmlFor=\"select-orient\" className=\"form-label\">\n                Orient\n              </label>\n\n              <select\n                id=\"select-orient\"\n                {...register(\"orient\")}\n                className=\"form-select\"\n                aria-label=\"Select Orient\"\n                required\n              >\n                <option selected>Select orient...</option>\n                <option value=\"1\">1 - Across Contours</option>\n                <option value=\"2\">2 - With Contours</option>\n                <option value=\"9\">9 - No Reported</option>\n                <option value=\"u\">U - Upstream</option>\n                <option value=\"d\">D - Downstream </option>\n              </select>\n            </div>\n\n            <div className=\"col-2 mb-3\">\n              <label htmlFor=\"select-set-type\" className=\"form-label\">\n                Set Type\n              </label>\n\n              <select\n                id=\"select-set-type\"\n                {...register(\"set-type\")}\n                className=\"form-select\"\n                aria-label=\"Select Set Type\"\n                required\n              >\n                <option selected>Select set type...</option>\n                <option value=\"b\">B - Bottom</option>\n                <option value=\"c\">C - Canned</option>\n                <option value=\"k\">K - Kited</option>\n                <option value=\"s\">S - Stepped</option>\n                <option value=\"t\">T - Thermocline</option>\n                <option value=\"9\">9 - Not Reported</option>\n              </select>\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"row justify-content-between\">\n            <div className=\"col-2\">\n              <Link to=\"/gear\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  <FaArrowLeft />\n                  Back\n                </button>\n              </Link>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"button\" className=\"btn btn-secondary\">\n                <FaPlus />\n                Add Another Mode\n              </button>\n            </div>\n\n            <div className=\"col-2\">\n              <button type=\"\" className=\"btn btn-primary\">\n                Create Project\n                <FaArrowRight />\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FN028);\n","import React from \"react\";\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"../updateAction\";\n\nconst Result = (props) => {\n  const { state } = useStateMachine(updateAction);\n\n  return (\n    <>\n      <h2>That's it.</h2>\n\n      <p>\n        Your project has been created with the following information. You can\n        download a pre-populated template database from the the projects detail\n        page here:{\" \"}\n        <button type=\"button\" class=\"btn btn-link\">\n          {state.prj_cd}\n        </button>\n      </p>\n\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n    </>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { StateMachineProvider, createStore } from \"little-state-machine\";\nimport FN011 from \"./pages/FN011\";\nimport Gear from \"./pages/Gear\";\nimport FN022 from \"./pages/FN022\";\nimport FN026 from \"./pages/FN026\";\nimport FN028 from \"./pages/FN028\";\nimport Result from \"./pages/Result\";\n\n//import \"./styles.css\";\n\ncreateStore({});\n\nfunction App() {\n  return (\n    <StateMachineProvider>\n      <div className=\"container\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"row justify-content-between my-3\">\n            <div className=\"col-6\">\n              <h1>FN Project Setup Wizard</h1>\n            </div>\n            <div className=\"col-2\">\n              <Link to=\"/\">Reset</Link>\n            </div>\n          </div>\n\n          <Route exact path=\"/\" component={FN011} />\n          <Route path=\"/fn022\" component={FN022} />\n          <Route path=\"/fn026\" component={FN026} />\n          <Route path=\"/fn028\" component={FN028} />\n          <Route path=\"/gear\" component={Gear} />\n          <Route path=\"/result\" component={Result} />\n        </Router>\n      </div>\n    </StateMachineProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}